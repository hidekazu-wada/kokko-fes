---
// メインSCSSファイルをインポート
import "../../styles/main.scss";

// データ
import categoriesData from "../../data/categories.json";

// 型定義
interface CategoryItem {
  name: string;
  image: string;
  location: string;
  time: string;
}

interface CategoryData {
  id: string;
  title: string;
  titleAccent: string;
  subtitle: string;
  description: string;
  items: CategoryItem[];
}

interface CategoriesData {
  [key: string]: CategoryData;
}

// 画像処理
import { getImage } from "astro:assets";

// 画像を明示的にインポート
import eatDemo from "../../images/eat/demo.png";

// コンポーネント
import PageLayout from "../../layouts/PageLayout.astro";
import PageBottomWave from "../../components/common/PageBottomWave.astro";
import Breadcrumb from "../../components/common/Breadcrumb.astro";

const typedCategoriesData = categoriesData as CategoriesData;
const categoryData = typedCategoriesData.eat;

// 画像処理
const processedItems = await Promise.all(
  categoryData.items.map(async (item: CategoryItem) => {
    try {
      const isProduction = import.meta.env.PROD;
      let optimizedImage;

      if (isProduction) {
        optimizedImage = {
          src: "/assets/demo.B4vCVBYL.png",
          width: eatDemo.width,
          height: eatDemo.height,
          srcSet: "/assets/demo.B4vCVBYL.png",
        };
      } else {
        optimizedImage = await getImage({
          src: eatDemo,
          format: "webp",
          widths: [620],
        });
      }

      return {
        ...item,
        processedImage: optimizedImage,
      };
    } catch (error) {
      console.error(`Error processing image for eat/${item.image}:`, error);
      return {
        ...item,
        processedImage: null,
      };
    }
  }),
);

const categoryDataWithImages = {
  ...categoryData,
  items: processedItems,
};
---

<PageLayout title={`${categoryData.title} ｜コッコ祭り 2025｜KOKKO Festival`}>
  <section class="page-wrapper eat">
    <div class="eat__container">
      <header class="eat__header">
        <h1 class="eat__title">
          <span class="eat__title-accent">{categoryData.titleAccent}</span>
          {categoryData.title.slice(1)}
        </h1>
        <p class="eat__subtitle">{categoryData.subtitle}</p>
        <p class="eat__description">{categoryData.description}</p>
      </header>

      <ul class="eat__list">
        {
          categoryDataWithImages.items.map(
            (item: CategoryItem & { processedImage?: any }) => (
              <li class="eat__item">
                <article class="eat__card">
                  <a href={`/eat/${item.name.toLowerCase().replace(/\s+/g, '-')}`} class="eat__card-link">
                    <div class="eat__card-image-wrapper">
                      {item.processedImage && (
                        <picture class="eat__card-image">
                          <source
                            media="(min-width: 1024px)"
                            srcset={item.processedImage.srcSet.toString()}
                          />
                          <source
                            media="(min-width: 744px)"
                            srcset={item.processedImage.srcSet.toString()}
                          />
                          <img
                            src={item.processedImage.src}
                            alt={item.name}
                            class="eat__card-img"
                          />
                        </picture>
                      )}
                      <div class="eat__card-overlay">
                        <span class="eat__card-title">
                          {item.name}
                        </span>
                      </div>
                      <svg
                        class="eat__card-play-icon"
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 84 85"
                        fill="none"
                        role="img"
                        aria-label="再生ボタン"
                      >
                        <circle
                          cx="42"
                          cy="42.0547"
                          r="39.5"
                          fill="#C99E2D"
                          stroke="#FFFCF2"
                          stroke-width="5"
                        />
                        <path
                          d="M35.5688 29.1786L34.2059 31.1658L32.9732 33.1871L35.0255 34.523L37.1236 35.9031L39.1942 37.3167L41.2923 38.6969L43.4503 39.9806L45.5961 41.4428L43.3327 42.7278L41.2924 44.2257L39.1694 45.5763L37.0503 46.95L34.9561 48.3574L32.7448 49.6952L34.2082 51.6889L35.4387 53.8289L37.4981 52.3038L39.6065 50.9511L41.8062 49.7394L43.7942 48.1887L45.969 46.9433L48.0671 45.559L50.138 44.1557L52.2798 42.8304L54.3654 41.4293L52.2137 40.154L50.2262 38.6398L48.0445 37.4127L46.0655 35.8922L43.8647 34.6924L41.8281 33.2537L39.7745 31.8275L37.6504 30.5187L35.5688 29.1786Z"
                          fill="#FFFCF2"
                        />
                      </svg>
                    </div>
                  </a>
                  <dl class="eat__card-details">
                    <div class="eat__card-detail">
                      <dt class="eat__card-detail-label">場所：</dt>
                      <dd class="eat__card-detail-value">
                        {item.location}
                      </dd>
                    </div>
                    <div class="eat__card-detail">
                      <dt class="eat__card-detail-label">時間：</dt>
                      <dd class="eat__card-detail-value">
                        {item.time}
                      </dd>
                    </div>
                  </dl>
                </article>
              </li>
            ),
          )
        }
      </ul>
    </div>
    <Breadcrumb currentPageTitle={categoryData.title} />
    <PageBottomWave />
  </section>
</PageLayout>

<style lang="scss">
  @import "../../styles/variables";
  @import "../../styles/functions";
  @import "../../styles/mixins";

  .eat {
    padding-top: spx(296);
    position: relative;
    min-height: 90vh;
    padding-bottom: spx(99);
    @include tablet-up {
      padding-top: ppx(253 * 1.2);
      padding-bottom: ppx(228 * 1.2);
    }
    @include desktop-up {
      padding-top: ppx(253);
      padding-bottom: ppx(228);
    }

    &__container {
      padding-bottom: spx(100);
      @include tablet-up {
        padding-bottom: ppx(130 * 1.2);
      }
      @include desktop-up {
        padding-bottom: ppx(130);
      }
    }

    &__title {
      color: var(--base_5, #102a4d);
      font-size: spx(70);
      font-style: normal;
      font-weight: 700;
      line-height: 130%;
      text-align: center;
      @include tablet-up {
        font-size: ppx(110 * 1.2);
      }
      @include desktop-up {
        font-size: ppx(110);
      }

      &-accent {
        color: var(--logo_color_3, #c99e2d);
      }
    }

    &__subtitle {
      color: var(--base_5, #102a4d);
      text-align: center;
      font-size: spx(26);
      font-style: normal;
      font-weight: 700;
      line-height: 180%;
      @include tablet-up {
        font-size: ppx(37 * 1.2);
      }
      @include desktop-up {
        font-size: ppx(37);
      }
    }

    &__description {
      color: var(--base_5, #102a4d);
      text-align: center;
      font-size: spx(26);
      font-style: normal;
      font-weight: 700;
      line-height: 180%;
      margin-top: spx(18);
      @include tablet-up {
        font-size: ppx(27 * 1.2);
        margin-top: ppx(30 * 1.2);
      }
      @include desktop-up {
        font-size: ppx(27);
        margin-top: ppx(30);
      }
    }

    $card-width-mobile: spx(620);
    $card-width-tablet: ppx(620 * 1.2);
    $card-width-desktop: ppx(620);

    &__list {
      display: grid;
      grid-template-columns: $card-width-mobile;
      gap: spx(90);
      justify-content: center;
      margin-top: spx(60);
      @include tablet-up {
        grid-template-columns: $card-width-tablet $card-width-tablet $card-width-tablet;
        gap: ppx(90 * 1.2) ppx(50 * 1.2);
        margin-top: ppx(102 * 1.2);
      }
      @include desktop-up {
        grid-template-columns: $card-width-desktop $card-width-desktop $card-width-desktop;
        gap: ppx(90) ppx(50);
        margin-top: ppx(102);
      }
    }

    &__card {
      width: max-content;
      display: flex;
      flex-flow: column;
      gap: spx(20);
      @include tablet-up {
        gap: ppx(20 * 1.2);
      }
      @include desktop-up {
        gap: ppx(20);
      }

      &-link {
        display: block;
        width: max-content;

        @include hover {
          &:hover {
            .eat__card-img {
              transform: scale(1.1);
            }
            .eat__card-play-icon circle {
              fill: $logo_color_1;
            }
          }
        }
      }

      &-image-wrapper {
        position: relative;
      }

      &-image {
        display: block;
        width: $card-width-mobile;
        height: spx(470);
        object-fit: cover;
        border-radius: spx(30);
        overflow: hidden;
        @include tablet-up {
          width: $card-width-tablet;
          height: ppx(470 * 1.2);
          border-radius: ppx(30 * 1.2);
        }
        @include desktop-up {
          width: $card-width-desktop;
          height: ppx(470);
          border-radius: ppx(30);
        }
      }

      &-img {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
      }

      &-overlay {
        width: max-content;
        padding: spx(10) spx(20);
        background-color: white;
        border-radius: spx(10);
        position: absolute;
        left: spx(27);
        bottom: spx(24);
        @include tablet-up {
          padding: ppx(10 * 1.2) ppx(20 * 1.2);
          border-radius: ppx(10 * 1.2);
          left: ppx(27 * 1.2);
          bottom: ppx(24 * 1.2);
        }
        @include desktop-up {
          padding: ppx(10) ppx(20);
          border-radius: ppx(10);
          left: ppx(27);
          bottom: ppx(24);
        }
      }

      &-title {
        color: var(--logo_color_1, #528ca2);
        font-size: spx(33);
        font-style: normal;
        font-weight: 700;
        line-height: 140%;
        @include tablet-up {
          font-size: ppx(33 * 1.2);
        }
        @include desktop-up {
          font-size: ppx(33);
        }
      }

      &-play-icon {
        display: block;
        width: spx(74);
        height: spx(74);
        position: absolute;
        right: spx(20);
        bottom: spx(20);
        @include tablet-up {
          width: ppx(74 * 1.2);
          height: ppx(74 * 1.2);
          right: ppx(20 * 1.2);
          bottom: ppx(20 * 1.2);
        }
        @include desktop-up {
          width: ppx(74);
          height: ppx(74);
          right: ppx(20);
          bottom: ppx(20);
        }

        circle {
          transition: fill 0.3s ease;
        }
      }

      &-details {
        width: spx(560);
        margin-inline: auto;
        display: flex;
        flex-flow: column;
        gap: spx(10);
        @include tablet-up {
          width: ppx(560 * 1.2);
          gap: ppx(10 * 1.2);
        }
        @include desktop-up {
          width: ppx(560);
          gap: ppx(10);
        }
      }

      &-detail {
        color: var(--base_5, #102a4d);
        font-size: spx(27);
        font-weight: 700;
        line-height: 140%;
        display: flex;
        position: relative;
        padding-bottom: spx(10);
        @include tablet-up {
          font-size: ppx(27 * 1.2);
          padding-bottom: ppx(10 * 1.2);
        }
        @include desktop-up {
          font-size: ppx(27);
          padding-bottom: ppx(10);
        }

        &::after {
          content: "";
          display: block;
          background: linear-gradient(
              to right,
              rgba(67, 67, 67, 1),
              rgba(67, 67, 67, 1) 25%,
              rgba(0, 0, 0, 0) 25%,
              rgba(0, 0, 0, 0) 100%
            )
            0% 0%;
          background-size: 4px 1px;
          width: 100%;
          height: 1px;
          margin-left: auto;
          margin-right: auto;
          position: absolute;
          bottom: 0;
          left: 0;
        }
      }
    }
  }
</style>