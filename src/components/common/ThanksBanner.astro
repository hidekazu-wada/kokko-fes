---
import thanksSvg from "../../images/common/thanks.svg";

// Props定義
interface Props {
  visitors?: string; // 来場者数
  booths?: string; // 出展数
}

const {
  visitors = "5,000", // デフォルト値
  booths = "30", // デフォルト値
} = Astro.props;
---

<section class="event-thanks" data-thanks-banner>
  <header class="event-thanks__header">
    <img src={thanksSvg.src} alt="THANKS" class="event-thanks__logo" />
    <h2 class="event-thanks__message">
      たくさんのご来場ありがとうございました!!
    </h2>
  </header>
  <aside class="event-thanks__stats">
    <dl class="event-thanks__data-list first">
      <dt class="event-thanks__data-label">来場者数：</dt>
      <dd class="event-thanks__data-value">{visitors}人</dd>
    </dl>
    <dl class="event-thanks__data-list second">
      <dt class="event-thanks__data-label">出展数：</dt>
      <dd class="event-thanks__data-value">{booths}ブース</dd>
    </dl>
    <a href="/memory" class="event-thanks__data-list third event-thanks__link">
      <span class="event-thanks__link-text">当日の様子を見る</span>
      <svg
        class="event-thanks__link-icon"
        xmlns="http://www.w3.org/2000/svg"
        width="35"
        height="36"
        viewBox="0 0 35 36"
        fill="none"
      >
        <circle cx="17.5" cy="18.0732" r="17.5" fill="#816259"></circle>
        <path
          d="M14.4596 11.9827L13.815 12.9226L13.232 13.8786L14.2026 14.5104L15.195 15.1632L16.1743 15.8318L17.1667 16.4846L18.1873 17.0917L19.2022 17.7833L18.1317 18.3911L17.1667 19.0996L16.1626 19.7384L15.1603 20.3881L14.1698 21.0538L13.1239 21.6865L13.8161 22.6295L14.398 23.6416L15.3721 22.9203L16.3693 22.2805L17.4097 21.7074L18.35 20.974L19.3786 20.3849L20.3709 19.7302L21.3504 19.0665L22.3634 18.4396L23.3499 17.777L22.3322 17.1738L21.3921 16.4576L20.3603 15.8772L19.4242 15.1581L18.3833 14.5906L17.4201 13.9101L16.4488 13.2356L15.4441 12.6165L14.4596 11.9827Z"
          fill="#FCF2C9"></path>
      </svg>
    </a>
  </aside>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const thanksBanner = document.querySelector(
      "[data-thanks-banner]",
    ) as HTMLElement;
    const footer = document.querySelector(".footer") as HTMLElement;

    if (!thanksBanner || !footer) return;

    // 初期状態を設定
    let isHidden = false;

    // スクロールイベントの処理
    const handleScroll = () => {
      const footerTop = footer.getBoundingClientRect().top;
      const windowHeight = window.innerHeight;

      // Footerの上部がビューポートの下端に到達したかチェック
      if (footerTop <= windowHeight && !isHidden) {
        // バナーを非表示
        thanksBanner.style.transform = "translateY(100%)";
        thanksBanner.style.opacity = "0";
        isHidden = true;
      } else if (footerTop > windowHeight && isHidden) {
        // バナーを表示
        thanksBanner.style.transform = "translateY(0)";
        thanksBanner.style.opacity = "1";
        isHidden = false;
      }
    };

    // スクロールイベントの最適化（throttle）
    let ticking = false;
    const scrollHandler = () => {
      if (!ticking) {
        window.requestAnimationFrame(() => {
          handleScroll();
          ticking = false;
        });
        ticking = true;
      }
    };

    // イベントリスナーを追加
    window.addEventListener("scroll", scrollHandler);

    // 初回実行
    handleScroll();
  });
</script>

<style lang="scss">
  /* 必要なmixin/functionをインポート */
  @import "../../styles/variables";
  @import "../../styles/functions";
  @import "../../styles/mixins";

  // Event Thanks Block
  .event-thanks {
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
    background: var(--logo_color_3, #c99e2d);
    padding: spx(27) 0;
    display: flex;
    flex-flow: column;
    align-items: center;
    gap: spx(12);
    z-index: 10;
    transition:
      transform 0.3s ease,
      opacity 0.3s ease;
    @include tablet-up {
      padding: ppx(28 * 1.2) 0;
      flex-direction: row;
      gap: ppx(79 * 1.2);
      justify-content: center;
    }
    @include desktop-up {
      padding: ppx(28) 0;
      gap: ppx(79);
    }

    &__header {
      display: flex;
      flex-flow: column;
      align-items: center;
      gap: spx(2);
      @include tablet-up {
        flex-flow: row;
        gap: ppx(40) * 1.2;
      }
      @include desktop-up {
        gap: ppx(40);
      }
    }

    &__logo {
      display: block;
      width: spx(500);
      margin-inline: auto;
      @include tablet-up {
        width: 17vw;
        margin-inline: unset;
      }
      @include desktop-up {
        width: ppx(538);
      }
    }

    &__message {
      color: var(--base_1, #fffcf2);
      text-align: center;
      font-family: "Zen Kaku Gothic Antique";
      font-size: spx(26);
      font-style: normal;
      font-weight: 700;
      line-height: 180%; /* 46.8px */
      @include tablet-up {
        font-size: ppx(31 * 1.2);
        text-align: left;
      }
      @include desktop-up {
        font-size: ppx(31);
      }
    }

    &__stats {
      display: flex;
      gap: spx(10);
      justify-content: center;
      @include tablet-up {
        gap: ppx(25) * 1.2;
        justify-content: flex-start;
      }
      @include desktop-up {
        gap: ppx(25);
      }
    }

    &__data-list {
      color: var(--logo_color_2, #816259);
      text-align: center;
      font-family: "Zen Kaku Gothic Antique";
      font-size: spx(22);
      font-style: normal;
      font-weight: 700;
      line-height: 150%; /* 33px */
      letter-spacing: spx(-0.66);
      border-radius: spx(50);
      background: var(--base_2, #fcf2c9);
      height: spx(61);
      display: flex;
      align-items: center;
      position: relative;
      justify-content: center;
      @include tablet-up {
        font-size: ppx(28 * 1.2);
        letter-spacing: ppx(-0.66 * 1.2);
        border-radius: ppx(50 * 1.2);
        height: ppx(68 * 1.2);
      }
      @include desktop-up {
        font-size: ppx(28);
        letter-spacing: ppx(-0.66);
        border-radius: ppx(50);
        height: ppx(68);
      }
      &.first {
        width: spx(206);
        @include tablet-up {
          width: ppx(314 * 1.2);
        }
        @include desktop-up {
          width: ppx(314);
        }
      }
      &.second {
        width: spx(201);
        @include tablet-up {
          width: ppx(314 * 1.2);
        }
        @include desktop-up {
          width: ppx(314);
        }
      }
      &.third {
        width: spx(237);
        @include tablet-up {
          width: 16vw;
        }
        @include desktop-up {
          width: ppx(314);
        }
      }
    }

    &__data-label {
      @include tablet-up {
      }
      @include desktop-up {
      }
    }

    &__data-value {
      @include tablet-up {
      }
      @include desktop-up {
      }
    }

    &__link {
      justify-content: flex-start;
      padding-left: spx(15);
      text-decoration: none;
      transition:
        background 0.3s ease,
        color 0.3s ease;
      @include tablet-up {
        padding-left: ppx(29) * 1.2;
      }
      @include desktop-up {
        padding-left: ppx(29);
      }

      @include hover {
        &:hover {
          background: var(--logo_color_2, #816259);
          color: var(--base_2, #fcf2c9);

          .event-thanks__link-icon {
            circle {
              transition: fill 0.3s ease;
              fill: var(--base_2, #fcf2c9);
            }
            path {
              transition: fill 0.3s ease;
              fill: var(--logo_color_2, #816259);
            }
          }
        }
      }
    }

    &__link-text {
      @include tablet-up {
      }
      @include desktop-up {
      }
    }

    &__link-icon {
      display: block;
      width: spx(35);
      height: spx(36);
      position: absolute;
      top: 50%;
      right: spx(10);
      transform: translateY(-50%);

      circle {
        transition: fill 0.3s ease;
      }
      path {
        transition: fill 0.3s ease;
      }

      @include tablet-up {
        width: ppx(43) * 1.2;
        height: ppx(43) * 1.2;
        right: ppx(12) * 1.2;
      }
      @include desktop-up {
        width: ppx(43);
        height: ppx(43);
        right: ppx(12);
      }
    }
  }
</style>
